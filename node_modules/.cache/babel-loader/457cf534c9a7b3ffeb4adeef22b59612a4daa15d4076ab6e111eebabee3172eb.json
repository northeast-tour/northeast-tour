{"ast":null,"code":"import _objectSpread from\"C:/Users/Admin/Downloads/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/blogPage.js\nimport React,{useEffect,useState}from\"react\";import{db}from\"./firebaseConfig\";import{collection,getDocs,orderBy,query}from\"firebase/firestore\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function BlogPage(_ref){let{selectedTag}=_ref;const[posts,setPosts]=useState([]);useEffect(()=>{const fetchBlogs=async()=>{const q=query(collection(db,\"blogPosts\"),orderBy(\"createdAt\",\"desc\"));const querySnapshot=await getDocs(q);const postsData=querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));setPosts(postsData);};fetchBlogs();},[]);const filteredPosts=selectedTag?posts.filter(post=>{var _post$tags;return(_post$tags=post.tags)===null||_post$tags===void 0?void 0:_post$tags.includes(selectedTag);}):posts;return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"10px 0\"},children:[filteredPosts.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"No blog posts found.\"}),filteredPosts.map(post=>{var _post$createdAt;return/*#__PURE__*/_jsxs(\"div\",{style:{borderBottom:\"1px solid #ccc\",marginBottom:\"20px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:post.title}),/*#__PURE__*/_jsx(\"p\",{children:post.content}),post.tags&&/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:\"10px\"},children:post.tags.map((tag,idx)=>/*#__PURE__*/_jsxs(\"span\",{style:{backgroundColor:\"#eee\",marginRight:\"8px\",padding:\"3px 7px\",borderRadius:\"4px\"},children:[\"#\",tag]},idx))}),/*#__PURE__*/_jsxs(\"small\",{style:{color:\"#888\"},children:[\"Posted on \",(_post$createdAt=post.createdAt)===null||_post$createdAt===void 0?void 0:_post$createdAt.toDate().toLocaleString()]})]},post.id);})]});}export default BlogPage;","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","orderBy","query","jsx","_jsx","jsxs","_jsxs","BlogPage","_ref","selectedTag","posts","setPosts","fetchBlogs","q","querySnapshot","postsData","docs","map","doc","_objectSpread","id","data","filteredPosts","filter","post","_post$tags","tags","includes","style","padding","children","length","_post$createdAt","borderBottom","marginBottom","title","content","tag","idx","backgroundColor","marginRight","borderRadius","color","createdAt","toDate","toLocaleString"],"sources":["C:/Users/Admin/Downloads/northeast-tour-gallery-fixed/src/blogPage.js"],"sourcesContent":["// src/blogPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebaseConfig\";\r\nimport { collection, getDocs, orderBy, query } from \"firebase/firestore\";\r\n\r\nfunction BlogPage({ selectedTag }) {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBlogs = async () => {\r\n      const q = query(collection(db, \"blogPosts\"), orderBy(\"createdAt\", \"desc\"));\r\n      const querySnapshot = await getDocs(q);\r\n      const postsData = querySnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setPosts(postsData);\r\n    };\r\n\r\n    fetchBlogs();\r\n  }, []);\r\n\r\n  const filteredPosts = selectedTag\r\n    ? posts.filter(post => post.tags?.includes(selectedTag))\r\n    : posts;\r\n\r\n  return (\r\n    <div style={{ padding: \"10px 0\" }}>\r\n      {filteredPosts.length === 0 && <p>No blog posts found.</p>}\r\n      {filteredPosts.map(post => (\r\n        <div key={post.id} style={{ borderBottom: \"1px solid #ccc\", marginBottom: \"20px\" }}>\r\n          <h3>{post.title}</h3>\r\n          <p>{post.content}</p>\r\n          {post.tags && (\r\n            <div style={{ marginBottom: \"10px\" }}>\r\n              {post.tags.map((tag, idx) => (\r\n                <span key={idx} style={{ backgroundColor: \"#eee\", marginRight: \"8px\", padding: \"3px 7px\", borderRadius: \"4px\" }}>\r\n                  #{tag}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <small style={{ color: \"#888\" }}>\r\n            Posted on {post.createdAt?.toDate().toLocaleString()}\r\n          </small>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogPage;\r\n"],"mappings":"6GAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,EAAE,KAAQ,kBAAkB,CACrC,OAASC,UAAU,CAAEC,OAAO,CAAEC,OAAO,CAAEC,KAAK,KAAQ,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzE,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAkB,IAAjB,CAAEC,WAAY,CAAC,CAAAD,IAAA,CAC/B,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAEtCD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAC,CAAC,CAAGX,KAAK,CAACH,UAAU,CAACD,EAAE,CAAE,WAAW,CAAC,CAAEG,OAAO,CAAC,WAAW,CAAE,MAAM,CAAC,CAAC,CAC1E,KAAM,CAAAa,aAAa,CAAG,KAAM,CAAAd,OAAO,CAACa,CAAC,CAAC,CACtC,KAAM,CAAAE,SAAS,CAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,EAAAC,aAAA,EAC1CC,EAAE,CAAEF,GAAG,CAACE,EAAE,EACPF,GAAG,CAACG,IAAI,CAAC,CAAC,CACb,CAAC,CACHV,QAAQ,CAACI,SAAS,CAAC,CACrB,CAAC,CAEDH,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAU,aAAa,CAAGb,WAAW,CAC7BC,KAAK,CAACa,MAAM,CAACC,IAAI,OAAAC,UAAA,QAAAA,UAAA,CAAID,IAAI,CAACE,IAAI,UAAAD,UAAA,iBAATA,UAAA,CAAWE,QAAQ,CAAClB,WAAW,CAAC,GAAC,CACtDC,KAAK,CAET,mBACEJ,KAAA,QAAKsB,KAAK,CAAE,CAAEC,OAAO,CAAE,QAAS,CAAE,CAAAC,QAAA,EAC/BR,aAAa,CAACS,MAAM,GAAK,CAAC,eAAI3B,IAAA,MAAA0B,QAAA,CAAG,sBAAoB,CAAG,CAAC,CACzDR,aAAa,CAACL,GAAG,CAACO,IAAI,OAAAQ,eAAA,oBACrB1B,KAAA,QAAmBsB,KAAK,CAAE,CAAEK,YAAY,CAAE,gBAAgB,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAJ,QAAA,eACjF1B,IAAA,OAAA0B,QAAA,CAAKN,IAAI,CAACW,KAAK,CAAK,CAAC,cACrB/B,IAAA,MAAA0B,QAAA,CAAIN,IAAI,CAACY,OAAO,CAAI,CAAC,CACpBZ,IAAI,CAACE,IAAI,eACRtB,IAAA,QAAKwB,KAAK,CAAE,CAAEM,YAAY,CAAE,MAAO,CAAE,CAAAJ,QAAA,CAClCN,IAAI,CAACE,IAAI,CAACT,GAAG,CAAC,CAACoB,GAAG,CAAEC,GAAG,gBACtBhC,KAAA,SAAgBsB,KAAK,CAAE,CAAEW,eAAe,CAAE,MAAM,CAAEC,WAAW,CAAE,KAAK,CAAEX,OAAO,CAAE,SAAS,CAAEY,YAAY,CAAE,KAAM,CAAE,CAAAX,QAAA,EAAC,GAC9G,CAACO,GAAG,GADIC,GAEL,CACP,CAAC,CACC,CACN,cACDhC,KAAA,UAAOsB,KAAK,CAAE,CAAEc,KAAK,CAAE,MAAO,CAAE,CAAAZ,QAAA,EAAC,YACrB,EAAAE,eAAA,CAACR,IAAI,CAACmB,SAAS,UAAAX,eAAA,iBAAdA,eAAA,CAAgBY,MAAM,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC,EAC/C,CAAC,GAdArB,IAAI,CAACJ,EAeV,CAAC,EACP,CAAC,EACC,CAAC,CAEV,CAEA,cAAe,CAAAb,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}